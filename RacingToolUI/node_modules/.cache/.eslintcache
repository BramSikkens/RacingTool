[{"/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/index.tsx":"1","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/reportWebVitals.ts":"2","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/App.tsx":"3","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/NavigationDrawer/index.tsx":"4","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Views/WelcomeView.tsx":"5","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Views/MainView.tsx":"6","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/RaceTable/index.tsx":"7","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/lib/FileReaderWeb.ts":"8","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/MainSection/index.tsx":"9","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/Modals/AddRaceModal/index.tsx":"10","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/DeelnemersTable/index.tsx":"11","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/Modals/AddInschrijving/index.tsx":"12","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/Modals/CreateOrganisation/index.tsx":"13"},{"size":500,"mtime":1638099513803,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1638099513804,"results":"16","hashOfConfig":"15"},{"size":1071,"mtime":1642335696288,"results":"17","hashOfConfig":"15"},{"size":3534,"mtime":1642177023785,"results":"18","hashOfConfig":"15"},{"size":1125,"mtime":1642155754995,"results":"19","hashOfConfig":"15"},{"size":1825,"mtime":1642264452723,"results":"20","hashOfConfig":"15"},{"size":3842,"mtime":1642330376997,"results":"21","hashOfConfig":"15"},{"size":786,"mtime":1641225757011,"results":"22","hashOfConfig":"15"},{"size":1853,"mtime":1642335471363,"results":"23","hashOfConfig":"15"},{"size":4538,"mtime":1642245799927,"results":"24","hashOfConfig":"15"},{"size":3146,"mtime":1642337926733,"results":"25","hashOfConfig":"15"},{"size":8146,"mtime":1642327662209,"results":"26","hashOfConfig":"15"},{"size":1894,"mtime":1642155651355,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5asocw",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"30"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"30"},"/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/index.tsx",[],[],"/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/reportWebVitals.ts",["67"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/App.tsx",["68"],"import \"@fontsource/roboto\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport \"reflect-metadata\";\nimport \"./App.css\";\nimport DeelnemersTable from \"./Components/DeelnemersTable\";\nimport MainSection from \"./Components/MainSection\";\nimport AddRaceModal from \"./Components/Modals/AddRaceModal\";\nimport RaceTable from \"./Components/RaceTable\";\nimport MainView from \"./Views/MainView\";\nimport WelcomeView from \"./Views/WelcomeView\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<WelcomeView />} />\n          <Route path=\"/races\" element={<MainView />}>\n            <Route path=\":raceTitle\" element={<MainSection />}>\n              <Route path=\"rondes/:rondeTitle\" element={<RaceTable />} />\n              <Route path=\"deelnemers\" element={<DeelnemersTable />} />\n            </Route>\n            <Route path=\"add\" element={<AddRaceModal />} />\n          </Route>\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/NavigationDrawer/index.tsx",["69","70","71","72","73","74","75","76","77"],"import { Toolbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\nimport { Box, Button, Drawer } from \"@mui/material\";\n\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\nimport { verkrijgOrganisatieDTO } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieRequests\";\nimport {\n  VerkrijgNavigationKeys,\n  VerkrijgRaceInfo,\n  VerkrijgOrganisatie,\n} from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases\";\nimport { CreatedRaceResponse } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/Race/RaceResponses\";\nimport { CreateRace } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/Race/RaceUseCases\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AddRaceModal from \"../Modals/AddRaceModal\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n\nconst generateMenu = (items: any) => {\n  return (\n    <>\n      {items.map((item: any) => {\n        if (item.children) {\n          return (\n            <Link to={`/races/${item.title}`}>\n              <TreeItem nodeId={item.index} key=\"1\" label={item.title}>\n                {generateMenu(item.children)}\n              </TreeItem>\n            </Link>\n          );\n        } else {\n          return <TreeItem nodeId={item.index} key=\"1\" label={item.title} />;\n        }\n      })}\n    </>\n  );\n};\n\nexport default function NavigationDrawer() {\n  const classes = useStyles();\n  const [navigationItems, setNavigationItems] = useState([]);\n  const [OrganisatieInfo, setOrganisatieInfo] = useState<\n    verkrijgOrganisatieDTO | undefined\n  >(undefined);\n\n  useEffect(() => {\n    if (ApplicationState.getInstance().organisatie !== undefined) {\n      setNavigationItems(\n        VerkrijgNavigationKeys(ApplicationState.getInstance())\n      );\n\n      setOrganisatieInfo(VerkrijgOrganisatie(ApplicationState.getInstance()));\n    }\n  }, [ApplicationState.getInstance().organisatie.inschrijvingen]);\n\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          [`& .MuiDrawer-paper`]: {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n          },\n        }}\n      >\n        <Toolbar />\n        <Box sx={{ overflow: \"auto\", textAlign: \"left\" }}>\n          <TreeView\n            className={classes.root}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n          >\n            <TreeItem\n              nodeId=\"0\"\n              label={\n                (\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    {OrganisatieInfo?.naam}\n                    <AddRaceModal onAddMenu={setNavigationItems} />\n                  </Box>\n                ) || \"Geen Naam\"\n              }\n            >\n              {navigationItems.length > 0 && generateMenu(navigationItems)}\n            </TreeItem>\n          </TreeView>\n        </Box>\n      </Drawer>\n    </>\n  );\n}\n","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Views/WelcomeView.tsx",["78","79","80","81","82","83","84"],"import { Button } from \"@mui/material\";\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\nimport { LoadOrganisatieFromFileInWebbrowser } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases\";\nimport FileReaderWeb from \"PropagandaSysteem/src/lib/FileReaderWeb\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CreateOrganisation from \"src/Components/Modals/CreateOrganisation\";\n\nasync function showFile(e: any) {\n  e.preventDefault();\n  const reader = new FileReader();\n  reader.onload = async (e) => {\n    const text: string = e!.target!.result as string;\n    LoadOrganisatieFromFileInWebbrowser(\n      {\n        filecontent: text,\n        overwrite: true,\n      },\n      ApplicationState.getInstance(),\n      new FileReaderWeb()\n    );\n  };\n  reader.readAsText(e!.target!.files![0]);\n}\n\nexport default function WelcomeView() {\n  return (\n    <>\n      <Link to=\"/races\">\n        <Button>Click to go to MainView</Button>\n      </Link>\n      <CreateOrganisation />\n      <input type=\"file\" onChange={(e) => showFile(e)} />\n    </>\n  );\n}\n","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Views/MainView.tsx",["85","86","87","88","89","90","91"],"import \"@fontsource/roboto\";\nimport { Box, CssBaseline, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Button } from \"@mui/material\";\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\nimport { saveFileFromWebbrowser } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases\";\nimport FileReaderWeb from \"PropagandaSysteem/src/lib/FileReaderWeb\";\nimport React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport \"reflect-metadata\";\nimport \"../App.css\";\nimport NavigationDrawer from \"../Components/NavigationDrawer\";\n\nexport default function MainView() {\n  const drawerWidth = 240;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: any, newValue: any) => {\n    setValue(newValue);\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n  }));\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        >\n          <Toolbar>\n            <Typography variant=\"h6\" noWrap component=\"div\">\n              Clipped drawer\n            </Typography>\n            <Button\n              sx={{ color: \"white\" }}\n              onClick={() => {\n                saveFileFromWebbrowser(\n                  ApplicationState.getInstance(),\n                  new FileReaderWeb()\n                );\n              }}\n            >\n              Save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <NavigationDrawer />\n        <Outlet />\n      </Box>\n    </>\n  );\n}\n","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/RaceTable/index.tsx",["92","93","94","95","96","97","98","99","100","101"],"import {\n  Box,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport ApplicationState, {\n  ApplicationStateObserver,\n} from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\nimport { VerkrijgReeksenVanRondeResponse } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/Race/RaceResponses\";\nimport { VerkrijgReeksenVanRonde } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/Race/RaceUseCases\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function RaceTable() {\n  const params = useParams();\n  const [reeksen, setReeksen] = useState<\n    VerkrijgReeksenVanRondeResponse | undefined\n  >(undefined);\n\n  useEffect(() => {\n    ApplicationState.getInstance().attach(onApplicationStateUpdated);\n    return () =>\n      ApplicationState.getInstance().detach(onApplicationStateUpdated);\n  }, []);\n\n  const onApplicationStateUpdated: ApplicationStateObserver = (\n    applicationState: ApplicationState\n  ) => {\n    setReeksen(\n      VerkrijgReeksenVanRonde(\n        {\n          raceTitle: params.raceTitle!,\n          rondeTitle: params.rondeTitle!,\n        },\n        applicationState\n      )\n    );\n  };\n\n  useEffect(() => {\n    setReeksen(\n      VerkrijgReeksenVanRonde(\n        {\n          raceTitle: params.raceTitle!,\n          rondeTitle: params.rondeTitle!,\n        },\n        ApplicationState.getInstance()\n      )\n    );\n  }, [params]);\n\n  return (\n    <>\n      {reeksen?.reeksen?.map((reeks, index) => {\n        return (\n          <>\n            <Box\n              sx={{\n                textAlign: \"left\",\n                paddingLeft: 2,\n                paddingBottom: 2,\n              }}\n            >\n              <b>{reeks.categorie} : </b>\n              <b>Reeks: </b>\n              {index + 1}/{reeksen!.reeksen!.length}\n            </Box>\n            <TableContainer\n              key={index}\n              component={Paper}\n              sx={{ marginBottom: 2 }}\n            >\n              <Table\n                key={index}\n                sx={{ minWidth: 650 }}\n                aria-label=\"simple table\"\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Lane</TableCell>\n                    <TableCell align=\"right\">Naam</TableCell>\n                    <TableCell align=\"right\">Category</TableCell>\n                    <TableCell align=\"right\">Club</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {reeks?.baanVerdeling?.map((baanVerdeling, index) => (\n                    <TableRow\n                      key={index}\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                    >\n                      <TableCell>{baanVerdeling.baan}</TableCell>\n\n                      {baanVerdeling.team == undefined ? (\n                        <TableCell align=\"right\">\n                          {baanVerdeling.naam}\n                        </TableCell>\n                      ) : (\n                        <TableCell align=\"right\">\n                          {baanVerdeling.team.map(\n                            (deelnemer: any, index: any) => {\n                              return <>{deelnemer.naam};</>;\n                            }\n                          )}\n                        </TableCell>\n                      )}\n\n                      <TableCell align=\"right\">\n                        {baanVerdeling.category}\n                      </TableCell>\n                      <TableCell align=\"right\">{baanVerdeling.club}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </>\n        );\n      })}\n    </>\n  );\n}\n","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/lib/FileReaderWeb.ts",["102","103"],"import IPersistable from \"PropagandaSysteem/src/ApplicationLayer/IPersistable\";\nimport Organisatie from \"PropagandaSysteem/src/DomainLayer/Entities/Organisatie\";\nimport { reviver } from \"PropagandaSysteem/src/DomainLayer/utils\";\nimport { plainToClass } from \"class-transformer\";\n\nexport default class FileReaderWeb implements IPersistable {\n  save(organisatie: Organisatie): boolean {\n    throw new Error(\"Method not implemented.\");\n  }\n  load(path?: string, filecontent?: string): Organisatie {\n    if (!filecontent) {\n      throw new Error(\"There is no content\");\n    }\n    const organisatieJSON: Record<string, any> = JSON.parse(\n      filecontent,\n      reviver\n    );\n    const organisatie: Organisatie = plainToClass(Organisatie, organisatieJSON);\n\n\n    return organisatie;\n  }\n}\n",[],"/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/MainSection/index.tsx",["104","105","106","107"],"import { Box, Toolbar, Typography } from \"@material-ui/core\";\nimport { Tab, Tabs } from \"@mui/material\";\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\nimport { VerkrijgRaceInfoResponse } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieResponses\";\nimport { VerkrijgRaceInfo } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases\";\nimport React, { useEffect } from \"react\";\nimport { Link, Outlet, useParams } from \"react-router-dom\";\nimport AddInschrijvingModal from \"../Modals/AddInschrijving\";\n\nexport default function MainSection() {\n  const [pageTitle, setPageTitle] = React.useState(\"PlaceHolder\");\n  const [raceInfo, setRaceInfo] = React.useState<\n    VerkrijgRaceInfoResponse | undefined\n  >(undefined);\n  const params = useParams();\n\n  useEffect(() => {\n    setRaceInfo(\n      VerkrijgRaceInfo(ApplicationState.getInstance(), params.raceTitle!)\n    );\n  }, [params]);\n\n  return (\n    <Box\n      component=\"main\"\n      sx={{ flexGrow: 1, bgcolor: \"background.default\", p: 3 }}\n    >\n      <Toolbar />\n      <Typography variant=\"h3\" align=\"left\">\n        {raceInfo?.raceInfo?.boottype || \"No title\"}{\" \"}\n        {raceInfo?.raceInfo?.afstand}M\n      </Typography>\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n        <Tabs aria-label=\"basic tabs example\">\n          <AddInschrijvingModal />\n          <Link key=\"basic\" to={\"deelnemers\"}>\n            <Tab key=\"basic\" label={\"deelnemers\"} />\n          </Link>\n          {raceInfo?.raceInfo?.rondes.map((ronde: string) => {\n            return (\n              <Link key=\"rondes/test\" to={\"rondes/\" + ronde}>\n                <Tab key=\"ronde\" label={ronde} />\n              </Link>\n            );\n          })}\n        </Tabs>\n      </Box>\n      <Box>\n        <Outlet />\n      </Box>\n    </Box>\n  );\n}\n","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/Modals/AddRaceModal/index.tsx",["108","109","110","111","112","113","114","115"],"import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@mui/material\";\nimport { CreateRaceRequest } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/Race/RaceRequests\";\nimport { CreateRace } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/Race/RaceUseCases\";\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\n\nimport PropTypes from \"prop-types\";\nimport { CreatedRaceResponse } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/Race/RaceResponses\";\nimport { VerkrijgNavigationKeys } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases\";\nimport AddCircleRoundedIcon from \"@mui/icons-material/AddCircleRounded\";\nimport { BootType } from \"PropagandaSysteem/src/DomainLayer/Enums/BootType\";\n\nexport default function AddRaceModal(props: any) {\n  const [open, setOpen] = React.useState(false);\n  const [raceRequest, setRaceRequest] = React.useState<CreateRaceRequest>({\n    afstand: \"125M\",\n    boottype: \"K1\",\n    titel: \"K1_125M\",\n    rondes: [\"ronde1\", \"ronde2\", \"finales\"],\n    aantalBanen: undefined,\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    const response: CreatedRaceResponse = CreateRace(\n      raceRequest,\n      ApplicationState.getInstance()\n    );\n\n    props.onAddMenu(VerkrijgNavigationKeys(ApplicationState.getInstance()));\n    handleClose();\n  };\n\n  return (\n    <div>\n      <IconButton aria-label=\"delete\" onClick={handleClickOpen}>\n        <AddCircleRoundedIcon />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Add new race</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Fill in the form to create a new race!\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"raceTitle\"\n            label=\"race Title\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e: any) => {\n              setRaceRequest({ ...raceRequest, titel: e.target.value });\n            }}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"raceDistance\"\n            label=\"race Distance\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e: any) => {\n              setRaceRequest({ ...raceRequest, afstand: e.target.value });\n            }}\n          />\n          <Select\n            labelId=\"BootType\"\n            id=\"BootType\"\n            label=\"BootType\"\n            value={raceRequest.boottype}\n            onChange={(e) => {\n              setRaceRequest({\n                ...(raceRequest as CreateRaceRequest),\n                boottype: e.target.value,\n              });\n            }}\n          >\n            {Object.keys(BootType).map((type: string) => {\n              return (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              );\n            })}\n          </Select>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"aantalBanen\"\n            label=\"Aantal Banen\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e: any) => {\n              setRaceRequest({ ...raceRequest, aantalBanen: e.target.value });\n            }}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"rounds\"\n            label=\"Rounds\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e: any) => {\n              const textWithoutContentAfterLastComma = e.target.value.substring(\n                \"0\",\n                e.target.value.lastIndexOf(\",\")\n              );\n\n              if (textWithoutContentAfterLastComma.length > 0) {\n                const itemArray: Array<string> =\n                  textWithoutContentAfterLastComma.split(\",\");\n                setRaceRequest({ ...raceRequest, rondes: itemArray });\n              }\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSave}>Save</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nAddRaceModal.propTypes = {\n  onAddMenu: PropTypes.func,\n};\n","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/DeelnemersTable/index.tsx",["116","117","118","119"],"/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/Modals/AddInschrijving/index.tsx",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134"],"import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\nimport { SchrijfInRequest } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieRequests\";\nimport { VerkrijgRaceInfoResponse } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieResponses\";\nimport {\n  SchrijfIn,\n  VerkrijgRaceInfo,\n} from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases\";\nimport { BootType } from \"PropagandaSysteem/src/DomainLayer/Enums/BootType\";\nimport { Categorie } from \"PropagandaSysteem/src/DomainLayer/Enums/Categorie\";\nimport { howManyTeamMembers } from \"PropagandaSysteem/src/DomainLayer/utils\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\n\nexport default function AddInschrijvingModal(props: any) {\n  const params = useParams();\n  const [open, setOpen] = React.useState(false);\n  const [isTeamRace, setIsTeamRace] = React.useState<boolean>(false);\n  const [teamCount, setTeamCount] = React.useState<number | undefined>(\n    undefined\n  );\n  const [schrijfInRequest, setSchrijfInRequest] = React.useState<\n    SchrijfInRequest | undefined\n  >(undefined);\n\n  const [raceInfo, setRaceInfo] = React.useState<\n    VerkrijgRaceInfoResponse | undefined\n  >(undefined);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    SchrijfIn(schrijfInRequest!, ApplicationState.getInstance());\n\n    handleClose();\n  };\n\n  useEffect(() => {\n    setRaceInfo(\n      VerkrijgRaceInfo(ApplicationState.getInstance(), params.raceTitle!)\n    );\n  }, [params]);\n\n  useEffect(() => {\n    if (raceInfo) {\n      setIsTeamRace(\n        howManyTeamMembers(raceInfo?.raceInfo?.boottype as BootType) > 1\n      );\n\n      setTeamCount(\n        howManyTeamMembers(raceInfo?.raceInfo?.boottype as BootType)\n      );\n    }\n  }, [raceInfo]);\n\n  useEffect(() => {\n    if (!isTeamRace) {\n      setSchrijfInRequest({\n        voornaam: \"\",\n        achternaam: \"\",\n        club: \"\",\n        categorie: \"\",\n        individueleWedstrijden: [\n          {\n            wedstrijd: params.raceTitle!,\n            rondes: [\"heat\"],\n          },\n        ],\n      });\n    } else {\n      const teamgenotenArray = [];\n      for (let i = 0; i < teamCount! - 1; i++) {\n        teamgenotenArray.push({\n          voornaam: \"\",\n          achternaam: \"\",\n          club: \"\",\n          categorie: Categorie.SEN_H,\n        });\n      }\n\n      setSchrijfInRequest({\n        voornaam: \"\",\n        achternaam: \"\",\n        club: \"\",\n        categorie: \"\",\n        teamWedstrijden: [\n          {\n            club: \"\",\n            wedstrijd: params.raceTitle!,\n            categorie: Categorie.ASP_D,\n            rondes: [\"heat\"],\n            teamgenoten: teamgenotenArray,\n          },\n        ],\n      });\n    }\n  }, [isTeamRace, teamCount]);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Add Inschrijving\n      </Button>\n\n      <Dialog open={open}>\n        <DialogContent>\n          <DialogContentText>\n            Fill in the form to create a new inscription\n          </DialogContentText>\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"firstName\"\n            label=\"First Name\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e) => {\n              setSchrijfInRequest({\n                ...(schrijfInRequest as SchrijfInRequest),\n                voornaam: e.target.value,\n              });\n            }}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"secondName\"\n            label=\"Second Name\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e) => {\n              setSchrijfInRequest({\n                ...(schrijfInRequest as SchrijfInRequest),\n                achternaam: e.target.value,\n              });\n            }}\n          />\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"club\"\n            label=\"Club\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e) => {\n              setSchrijfInRequest({\n                ...(schrijfInRequest as SchrijfInRequest),\n                club: e.target.value,\n              });\n            }}\n          />\n          <InputLabel id=\"demo-multiple-checkbox-label\">Category</InputLabel>\n\n          <Select\n            labelId=\"Categorie\"\n            id=\"category\"\n            label=\"Category\"\n            value={schrijfInRequest?.categorie || Categorie.SEN_D}\n            onChange={(e) => {\n              setSchrijfInRequest({\n                ...(schrijfInRequest as SchrijfInRequest),\n                categorie: e.target.value,\n              });\n            }}\n          >\n            {Object.keys(Categorie).map((categorie: string) => {\n              return (\n                <MenuItem key={categorie} value={categorie}>\n                  {categorie}\n                </MenuItem>\n              );\n            })}\n          </Select>\n\n          {schrijfInRequest && schrijfInRequest!.teamWedstrijden\n            ? schrijfInRequest!.teamWedstrijden![0].teamgenoten.map(\n                (teammember, index) => {\n                  return (\n                    <>\n                      <h3>TeamMember:{index + 1}</h3>\n                      <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"firstName\"\n                        label=\"First Name\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        onChange={(e) => {\n                          const schrijfInRequestCopy = { ...schrijfInRequest };\n                          schrijfInRequestCopy.teamWedstrijden![0].teamgenoten[\n                            index\n                          ].voornaam = e.target.value;\n\n                          setSchrijfInRequest(schrijfInRequestCopy);\n                        }}\n                      />\n                      <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"secondName\"\n                        label=\"Second Name\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        onChange={(e) => {\n                          const schrijfInRequestCopy = { ...schrijfInRequest };\n                          schrijfInRequestCopy.teamWedstrijden![0].teamgenoten[\n                            index\n                          ].achternaam = e.target.value;\n\n                          setSchrijfInRequest(schrijfInRequestCopy);\n                        }}\n                      />\n                      <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"club\"\n                        label=\"Club\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        onChange={(e) => {\n                          const schrijfInRequestCopy = { ...schrijfInRequest };\n                          schrijfInRequestCopy.teamWedstrijden![0].teamgenoten[\n                            index\n                          ].club = e.target.value;\n\n                          setSchrijfInRequest(schrijfInRequestCopy);\n                        }}\n                      />\n                    </>\n                  );\n                }\n              )\n            : undefined}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSave}>Save</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nAddInschrijvingModal.propTypes = {\n  onAddMenu: PropTypes.func,\n};\n","/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/Modals/CreateOrganisation/index.tsx",["135","136","137","138","139","140","141","142"],"import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\nimport CreerOrganisatieDTO from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieRequests\";\nimport { CreatedOrganisatieResponse } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieResponses\";\nimport { CreerOrganisatie } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases\";\nimport React, { useState } from \"react\";\n\nexport default function CreateOrganisation(props: any) {\n  const [open, setOpen] = React.useState(false);\n  const [creerOrganisatieDTO, setCreerOrganisatieDTO] = useState<\n    CreerOrganisatieDTO | undefined\n  >(undefined);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    const response: CreatedOrganisatieResponse = CreerOrganisatie(\n      {\n        naam: \"testWedstrijd\",\n        plaats: \"Mechelen\",\n        start: \"01/01/2022\",\n        einde: \"02/01/2022\",\n      },\n      ApplicationState.getInstance()\n    );\n\n    console.log(response);\n\n    handleClose();\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Create New Organisation\n      </Button>\n      <Dialog open={open}>\n        <DialogTitle>Add new race</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Fill in the form to create a new race!\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSave}>Save</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nCreateOrganisation.propTypes = {};\n",{"ruleId":"143","severity":1,"message":"144","line":3,"column":25,"nodeType":"145","messageId":"146","endLine":3,"endColumn":57},{"ruleId":"143","severity":1,"message":"144","line":13,"column":1,"nodeType":"147","messageId":"146","endLine":13,"endColumn":15},{"ruleId":"148","severity":1,"message":"149","line":6,"column":15,"nodeType":"150","messageId":"151","endLine":6,"endColumn":21},{"ruleId":"148","severity":1,"message":"152","line":12,"column":3,"nodeType":"150","messageId":"151","endLine":12,"endColumn":19},{"ruleId":"148","severity":1,"message":"153","line":15,"column":10,"nodeType":"150","messageId":"151","endLine":15,"endColumn":29},{"ruleId":"148","severity":1,"message":"154","line":16,"column":10,"nodeType":"150","messageId":"151","endLine":16,"endColumn":20},{"ruleId":"148","severity":1,"message":"155","line":23,"column":31,"nodeType":"150","messageId":"151","endLine":23,"endColumn":41},{"ruleId":"156","severity":1,"message":"157","line":23,"column":38,"nodeType":"158","messageId":"159","endLine":23,"endColumn":41,"suggestions":"160"},{"ruleId":"156","severity":1,"message":"157","line":37,"column":30,"nodeType":"158","messageId":"159","endLine":37,"endColumn":33,"suggestions":"161"},{"ruleId":"156","severity":1,"message":"157","line":40,"column":25,"nodeType":"158","messageId":"159","endLine":40,"endColumn":28,"suggestions":"162"},{"ruleId":"143","severity":1,"message":"144","line":57,"column":16,"nodeType":"147","messageId":"146","endLine":57,"endColumn":43},{"ruleId":"156","severity":1,"message":"157","line":9,"column":28,"nodeType":"158","messageId":"159","endLine":9,"endColumn":31,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":13,"column":26,"nodeType":"166","messageId":"167","endLine":13,"endColumn":36,"suggestions":"168"},{"ruleId":"164","severity":1,"message":"165","line":13,"column":26,"nodeType":"166","messageId":"167","endLine":13,"endColumn":28,"suggestions":"169"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":21,"nodeType":"166","messageId":"167","endLine":23,"endColumn":38,"suggestions":"170"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":21,"nodeType":"166","messageId":"167","endLine":23,"endColumn":31,"suggestions":"171"},{"ruleId":"164","severity":1,"message":"165","line":23,"column":21,"nodeType":"166","messageId":"167","endLine":23,"endColumn":23,"suggestions":"172"},{"ruleId":"143","severity":1,"message":"144","line":26,"column":16,"nodeType":"147","messageId":"146","endLine":26,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":14,"column":16,"nodeType":"147","messageId":"146","endLine":14,"endColumn":35},{"ruleId":"148","severity":1,"message":"173","line":16,"column":10,"nodeType":"150","messageId":"151","endLine":16,"endColumn":15},{"ruleId":"148","severity":1,"message":"174","line":18,"column":9,"nodeType":"150","messageId":"151","endLine":18,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":18,"column":32,"nodeType":"158","messageId":"159","endLine":18,"endColumn":35,"suggestions":"175"},{"ruleId":"156","severity":1,"message":"157","line":18,"column":47,"nodeType":"158","messageId":"159","endLine":18,"endColumn":50,"suggestions":"176"},{"ruleId":"148","severity":1,"message":"177","line":22,"column":9,"nodeType":"150","messageId":"151","endLine":22,"endColumn":18},{"ruleId":"148","severity":1,"message":"155","line":22,"column":33,"nodeType":"150","messageId":"151","endLine":22,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":19,"column":16,"nodeType":"147","messageId":"146","endLine":19,"endColumn":36},{"ruleId":"164","severity":1,"message":"165","line":37,"column":22,"nodeType":"166","messageId":"167","endLine":37,"endColumn":39},{"ruleId":"164","severity":1,"message":"165","line":38,"column":23,"nodeType":"166","messageId":"167","endLine":38,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":49,"column":22,"nodeType":"166","messageId":"167","endLine":49,"endColumn":39},{"ruleId":"164","severity":1,"message":"165","line":50,"column":23,"nodeType":"166","messageId":"167","endLine":50,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":71,"column":28,"nodeType":"166","messageId":"167","endLine":71,"endColumn":45,"suggestions":"178"},{"ruleId":"164","severity":1,"message":"165","line":71,"column":28,"nodeType":"166","messageId":"167","endLine":71,"endColumn":36,"suggestions":"179"},{"ruleId":"156","severity":1,"message":"157","line":106,"column":41,"nodeType":"158","messageId":"159","endLine":106,"endColumn":44,"suggestions":"180"},{"ruleId":"148","severity":1,"message":"181","line":106,"column":46,"nodeType":"150","messageId":"151","endLine":106,"endColumn":56},{"ruleId":"156","severity":1,"message":"157","line":106,"column":53,"nodeType":"158","messageId":"159","endLine":106,"endColumn":56,"suggestions":"182"},{"ruleId":"148","severity":1,"message":"183","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":32},{"ruleId":"156","severity":1,"message":"157","line":14,"column":43,"nodeType":"158","messageId":"159","endLine":14,"endColumn":46,"suggestions":"184"},{"ruleId":"143","severity":1,"message":"144","line":10,"column":16,"nodeType":"147","messageId":"146","endLine":10,"endColumn":38},{"ruleId":"148","severity":1,"message":"185","line":11,"column":10,"nodeType":"150","messageId":"151","endLine":11,"endColumn":19},{"ruleId":"148","severity":1,"message":"186","line":11,"column":21,"nodeType":"150","messageId":"151","endLine":11,"endColumn":33},{"ruleId":"164","severity":1,"message":"165","line":19,"column":56,"nodeType":"166","messageId":"167","endLine":19,"endColumn":73},{"ruleId":"143","severity":1,"message":"144","line":24,"column":16,"nodeType":"147","messageId":"146","endLine":24,"endColumn":49},{"ruleId":"143","severity":1,"message":"187","line":24,"column":38,"nodeType":"150","messageId":"188","endLine":24,"endColumn":48},{"ruleId":"156","severity":1,"message":"157","line":24,"column":45,"nodeType":"158","messageId":"159","endLine":24,"endColumn":48,"suggestions":"189"},{"ruleId":"148","severity":1,"message":"190","line":43,"column":11,"nodeType":"150","messageId":"151","endLine":43,"endColumn":40},{"ruleId":"156","severity":1,"message":"157","line":71,"column":27,"nodeType":"158","messageId":"159","endLine":71,"endColumn":30,"suggestions":"191"},{"ruleId":"156","severity":1,"message":"157","line":83,"column":27,"nodeType":"158","messageId":"159","endLine":83,"endColumn":30,"suggestions":"192"},{"ruleId":"156","severity":1,"message":"157","line":115,"column":27,"nodeType":"158","messageId":"159","endLine":115,"endColumn":30,"suggestions":"193"},{"ruleId":"156","severity":1,"message":"157","line":127,"column":27,"nodeType":"158","messageId":"159","endLine":127,"endColumn":30,"suggestions":"194"},{"ruleId":"143","severity":1,"message":"144","line":23,"column":16,"nodeType":"147","messageId":"146","endLine":23,"endColumn":42},{"ruleId":"148","severity":1,"message":"195","line":36,"column":5,"nodeType":"150","messageId":"151","endLine":36,"endColumn":39},{"ruleId":"164","severity":1,"message":"165","line":41,"column":22,"nodeType":"166","messageId":"167","endLine":41,"endColumn":39},{"ruleId":"164","severity":1,"message":"165","line":52,"column":22,"nodeType":"166","messageId":"167","endLine":52,"endColumn":39},{"ruleId":"143","severity":1,"message":"144","line":26,"column":16,"nodeType":"147","messageId":"146","endLine":26,"endColumn":57},{"ruleId":"143","severity":1,"message":"187","line":26,"column":46,"nodeType":"150","messageId":"188","endLine":26,"endColumn":56},{"ruleId":"148","severity":1,"message":"196","line":26,"column":46,"nodeType":"150","messageId":"151","endLine":26,"endColumn":56},{"ruleId":"156","severity":1,"message":"157","line":26,"column":53,"nodeType":"158","messageId":"159","endLine":26,"endColumn":56,"suggestions":"197"},{"ruleId":"164","severity":1,"message":"165","line":50,"column":15,"nodeType":"166","messageId":"167","endLine":50,"endColumn":32},{"ruleId":"164","severity":1,"message":"165","line":57,"column":56,"nodeType":"166","messageId":"167","endLine":57,"endColumn":73},{"ruleId":"164","severity":1,"message":"165","line":82,"column":24,"nodeType":"166","messageId":"167","endLine":82,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":89,"column":27,"nodeType":"166","messageId":"167","endLine":89,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":106,"column":24,"nodeType":"166","messageId":"167","endLine":106,"endColumn":41},{"ruleId":"164","severity":1,"message":"165","line":197,"column":32,"nodeType":"166","messageId":"167","endLine":197,"endColumn":49,"suggestions":"198"},{"ruleId":"164","severity":1,"message":"165","line":198,"column":15,"nodeType":"166","messageId":"167","endLine":198,"endColumn":49,"suggestions":"199"},{"ruleId":"164","severity":1,"message":"165","line":198,"column":15,"nodeType":"166","messageId":"167","endLine":198,"endColumn":32,"suggestions":"200"},{"ruleId":"164","severity":1,"message":"165","line":213,"column":27,"nodeType":"166","messageId":"167","endLine":213,"endColumn":64,"suggestions":"201"},{"ruleId":"164","severity":1,"message":"165","line":230,"column":27,"nodeType":"166","messageId":"167","endLine":230,"endColumn":64,"suggestions":"202"},{"ruleId":"164","severity":1,"message":"165","line":247,"column":27,"nodeType":"166","messageId":"167","endLine":247,"endColumn":64,"suggestions":"203"},{"ruleId":"148","severity":1,"message":"204","line":8,"column":3,"nodeType":"150","messageId":"151","endLine":8,"endColumn":12},{"ruleId":"148","severity":1,"message":"205","line":10,"column":8,"nodeType":"150","messageId":"151","endLine":10,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":17,"column":16,"nodeType":"147","messageId":"146","endLine":17,"endColumn":55},{"ruleId":"143","severity":1,"message":"187","line":17,"column":44,"nodeType":"150","messageId":"188","endLine":17,"endColumn":54},{"ruleId":"148","severity":1,"message":"196","line":17,"column":44,"nodeType":"150","messageId":"151","endLine":17,"endColumn":54},{"ruleId":"156","severity":1,"message":"157","line":17,"column":51,"nodeType":"158","messageId":"159","endLine":17,"endColumn":54,"suggestions":"206"},{"ruleId":"148","severity":1,"message":"207","line":19,"column":10,"nodeType":"150","messageId":"151","endLine":19,"endColumn":29},{"ruleId":"148","severity":1,"message":"208","line":19,"column":31,"nodeType":"150","messageId":"151","endLine":19,"endColumn":53},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration","@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'VerkrijgRaceInfo' is defined but never used.","'CreatedRaceResponse' is defined but never used.","'CreateRace' is defined but never used.","'theme' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["209","210"],["211","212"],["213","214"],["215","216"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["217"],["218"],["219"],["220"],["221"],"'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["222","223"],["224","225"],"'useStyles' is assigned a value but never used.",["226"],["227"],["228","229"],"'index' is defined but never used.",["230","231"],"'organisatie' is defined but never used.",["232","233"],"'pageTitle' is assigned a value but never used.","'setPageTitle' is assigned a value but never used.","Argument 'props' should be typed with a non-any type.","anyTypedArg",["234","235"],"'response' is assigned a value but never used.",["236","237"],["238","239"],["240","241"],["242","243"],"'applicationState' is defined but never used.","'props' is defined but never used.",["244","245"],["246"],["247"],["248"],["249"],["250"],["251"],"'TextField' is defined but never used.","'PropTypes' is defined but never used.",["252","253"],"'creerOrganisatieDTO' is assigned a value but never used.","'setCreerOrganisatieDTO' is assigned a value but never used.",{"messageId":"254","fix":"255","desc":"256"},{"messageId":"257","fix":"258","desc":"259"},{"messageId":"254","fix":"260","desc":"256"},{"messageId":"257","fix":"261","desc":"259"},{"messageId":"254","fix":"262","desc":"256"},{"messageId":"257","fix":"263","desc":"259"},{"messageId":"254","fix":"264","desc":"256"},{"messageId":"257","fix":"265","desc":"259"},{"messageId":"266","fix":"267","desc":"268"},{"messageId":"266","fix":"269","desc":"268"},{"messageId":"266","fix":"270","desc":"268"},{"messageId":"266","fix":"271","desc":"268"},{"messageId":"266","fix":"272","desc":"268"},{"messageId":"254","fix":"273","desc":"256"},{"messageId":"257","fix":"274","desc":"259"},{"messageId":"254","fix":"275","desc":"256"},{"messageId":"257","fix":"276","desc":"259"},{"messageId":"266","fix":"277","desc":"268"},{"messageId":"266","fix":"278","desc":"268"},{"messageId":"254","fix":"279","desc":"256"},{"messageId":"257","fix":"280","desc":"259"},{"messageId":"254","fix":"281","desc":"256"},{"messageId":"257","fix":"282","desc":"259"},{"messageId":"254","fix":"283","desc":"256"},{"messageId":"257","fix":"284","desc":"259"},{"messageId":"254","fix":"285","desc":"256"},{"messageId":"257","fix":"286","desc":"259"},{"messageId":"254","fix":"287","desc":"256"},{"messageId":"257","fix":"288","desc":"259"},{"messageId":"254","fix":"289","desc":"256"},{"messageId":"257","fix":"290","desc":"259"},{"messageId":"254","fix":"291","desc":"256"},{"messageId":"257","fix":"292","desc":"259"},{"messageId":"254","fix":"293","desc":"256"},{"messageId":"257","fix":"294","desc":"259"},{"messageId":"254","fix":"295","desc":"256"},{"messageId":"257","fix":"296","desc":"259"},{"messageId":"266","fix":"297","desc":"268"},{"messageId":"266","fix":"298","desc":"268"},{"messageId":"266","fix":"299","desc":"268"},{"messageId":"266","fix":"300","desc":"268"},{"messageId":"266","fix":"301","desc":"268"},{"messageId":"266","fix":"302","desc":"268"},{"messageId":"254","fix":"303","desc":"256"},{"messageId":"257","fix":"304","desc":"259"},"suggestUnknown",{"range":"305","text":"306"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"305","text":"307"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"308","text":"306"},{"range":"308","text":"307"},{"range":"309","text":"306"},{"range":"309","text":"307"},{"range":"310","text":"306"},{"range":"310","text":"307"},"suggestOptionalChain",{"range":"311","text":"312"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"313","text":"312"},{"range":"314","text":"315"},{"range":"316","text":"312"},{"range":"317","text":"312"},{"range":"318","text":"306"},{"range":"318","text":"307"},{"range":"319","text":"306"},{"range":"319","text":"307"},{"range":"320","text":"312"},{"range":"321","text":"312"},{"range":"322","text":"306"},{"range":"322","text":"307"},{"range":"323","text":"306"},{"range":"323","text":"307"},{"range":"324","text":"306"},{"range":"324","text":"307"},{"range":"325","text":"306"},{"range":"325","text":"307"},{"range":"326","text":"306"},{"range":"326","text":"307"},{"range":"327","text":"306"},{"range":"327","text":"307"},{"range":"328","text":"306"},{"range":"328","text":"307"},{"range":"329","text":"306"},{"range":"329","text":"307"},{"range":"330","text":"306"},{"range":"330","text":"307"},{"range":"331","text":"312"},{"range":"332","text":"315"},{"range":"333","text":"312"},{"range":"334","text":"315"},{"range":"335","text":"315"},{"range":"336","text":"315"},{"range":"337","text":"306"},{"range":"337","text":"307"},[1109,1112],"unknown","never",[1326,1329],[1378,1381],[494,497],[625,626],"?",[617,618],[867,868],"?.",[860,861],[852,853],[802,805],[817,820],[1874,1875],[1865,1866],[3239,3242],[3251,3254],[614,617],[946,949],[2166,2169],[2514,2517],[3450,3453],[3791,3794],[998,1001],[5391,5392],[5456,5457],[5439,5440],[6109,6110],[6826,6827],[7532,7533],[683,686]]