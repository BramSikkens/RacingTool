{"ast":null,"code":"var _jsxFileName = \"/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/NavigationDrawer/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\nimport { Box, Drawer } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Toolbar } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  }\n}));\n\nconst generateMenu = items => {\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    className: classes.root,\n    defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }, this),\n    defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 32\n    }, this),\n    children: items.map(item => {\n      if (item.children) {\n        return /*#__PURE__*/_jsxDEV(TreeItem, {\n          nodeId: item.index,\n          label: item.title,\n          children: generateMenu(item.children)\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(TreeItem, {\n          nodeId: item.index,\n          label: item.title\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n\nexport default function NavigationDrawer() {\n  _s();\n\n  const classes = useStyles();\n  const [navigationItems, setNavigationItems] = useState([{\n    title: \"K1_1000\",\n    index: \"1\",\n    children: [{\n      title: \"ronde1\",\n      index: \"2\"\n    }, {\n      title: \"ronde2\",\n      index: \"3\"\n    }]\n  }, {\n    title: \"K2_1000\",\n    index: \"4\",\n    children: [{\n      title: \"ronde1\",\n      index: \"5\"\n    }, {\n      title: \"ronde2\",\n      index: \"6\"\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: \"border-box\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          overflow: \"auto\"\n        },\n        children: generateMenu(navigationItems)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(NavigationDrawer, \"TzDx7PnILELq0Z54upmkFgMddEw=\", false, function () {\n  return [useStyles];\n});\n\n_c = NavigationDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationDrawer\");","map":{"version":3,"sources":["/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/NavigationDrawer/index.tsx"],"names":["TreeItem","TreeView","Box","Drawer","makeStyles","React","useState","ChevronRightIcon","ExpandMoreIcon","Toolbar","drawerWidth","useStyles","theme","root","display","flexDirection","drawer","width","flexShrink","drawerPaper","generateMenu","items","classes","map","item","children","index","title","NavigationDrawer","navigationItems","setNavigationItems","boxSizing","overflow"],"mappings":"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","sourcesContent":["import { TreeItem, TreeView } from \"@material-ui/lab\";\nimport { Box, Drawer } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Toolbar } from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n\nconst generateMenu = (items: any) => {\n  return (\n      <TreeView\n            className={classes.root}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n          >\n      {items.map((item: any) => {\n        if (item.children) {\n          return (\n            <TreeItem nodeId={item.index} key=\"1\" label={item.title}>\n              {generateMenu(item.children)}\n            </TreeItem>\n          );\n        } else {\n          return <TreeItem nodeId={item.index} key=\"1\" label={item.title} />;\n        }\n      })}\n    </TreeView>\n  );\n};\n\nexport default function NavigationDrawer() {\n  const classes = useStyles();\n  const [navigationItems, setNavigationItems] = useState([\n    {\n      title: \"K1_1000\",\n      index: \"1\",\n      children: [\n        {\n          title: \"ronde1\",\n          index: \"2\",\n        },\n        {\n          title: \"ronde2\",\n          index: \"3\",\n        },\n      ],\n    },\n    {\n      title: \"K2_1000\",\n      index: \"4\",\n      children: [\n        {\n          title: \"ronde1\",\n          index: \"5\",\n        },\n        {\n          title: \"ronde2\",\n          index: \"6\",\n        },\n      ],\n    },\n  ]);\n\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          [`& .MuiDrawer-paper`]: {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n          },\n        }}\n      >\n        <Toolbar />\n        <Box sx={{ overflow: \"auto\" }}>\n        \n            {generateMenu(navigationItems)}\n       \n        </Box>\n      </Drawer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}