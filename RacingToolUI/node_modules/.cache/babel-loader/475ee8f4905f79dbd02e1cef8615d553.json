{"ast":null,"code":"var _jsxFileName = \"/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/NavigationDrawer/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\nimport { Box, Drawer } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Toolbar } from \"@material-ui/core\";\nimport { VerkrijgNavigationKeys } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases\";\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  }\n}));\n\nconst generateMenu = items => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: items.map(item => {\n      if (item.children) {\n        return /*#__PURE__*/_jsxDEV(TreeItem, {\n          nodeId: item.index,\n          label: item.title,\n          onClick: () => {\n            VerkrijgRaceInfo;\n          },\n          children: generateMenu(item.children)\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(TreeItem, {\n          nodeId: item.index,\n          label: item.title\n        }, \"1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 18\n        }, this);\n      }\n    })\n  }, void 0, false);\n};\n\nexport default function NavigationDrawer() {\n  _s();\n\n  const classes = useStyles();\n  const [navigationItems, setNavigationItems] = useState([]);\n  useEffect(() => {\n    if (ApplicationState.getInstance().organisatie !== undefined) {\n      setNavigationItems(VerkrijgNavigationKeys(ApplicationState.getInstance()));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: \"border-box\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          overflow: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(TreeView, {\n          className: classes.root,\n          defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 34\n          }, this),\n          defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 32\n          }, this),\n          children: navigationItems.length > 0 && generateMenu(navigationItems)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(NavigationDrawer, \"NMIIbn1h6KQN91zsjFIAbZX6SI4=\", false, function () {\n  return [useStyles];\n});\n\n_c = NavigationDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationDrawer\");","map":{"version":3,"sources":["/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/NavigationDrawer/index.tsx"],"names":["TreeItem","TreeView","Box","Drawer","makeStyles","React","useEffect","useState","ChevronRightIcon","ExpandMoreIcon","Toolbar","VerkrijgNavigationKeys","ApplicationState","drawerWidth","useStyles","theme","root","display","flexDirection","drawer","width","flexShrink","drawerPaper","generateMenu","items","map","item","children","index","title","VerkrijgRaceInfo","NavigationDrawer","classes","navigationItems","setNavigationItems","getInstance","organisatie","undefined","boxSizing","overflow","length"],"mappings":"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","sourcesContent":["import { TreeItem, TreeView } from \"@material-ui/lab\";\nimport { Box, Drawer } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Toolbar } from \"@material-ui/core\";\nimport { VerkrijgNavigationKeys } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases\";\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n\nconst generateMenu = (items: any) => {\n  return (\n    <>\n      {items.map((item: any) => {\n        \n        if (item.children) {\n          return (\n            \n            <TreeItem nodeId={item.index} key=\"1\" label={item.title} onClick={()=>{\n              VerkrijgRaceInfo;\n            }}>\n              {generateMenu(item.children)}\n            </TreeItem>\n          );\n        } else {\n          return <TreeItem nodeId={item.index} key=\"1\" label={item.title} />;\n        }\n      })}\n    </>\n  );\n};\n\nexport default function NavigationDrawer() {\n  const classes = useStyles();\n  const [navigationItems, setNavigationItems] = useState([]);\n\n  useEffect(() => {\n    if (ApplicationState.getInstance().organisatie !== undefined) {\n      setNavigationItems(\n        VerkrijgNavigationKeys(ApplicationState.getInstance())\n      );\n    }\n  }, []);\n\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          [`& .MuiDrawer-paper`]: {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n          },\n        }}\n      >\n        <Toolbar />\n        <Box sx={{ overflow: \"auto\" }}>\n          <TreeView\n            className={classes.root}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n          >\n            {navigationItems.length > 0 && generateMenu(navigationItems)}\n          </TreeView>\n        </Box>\n      </Drawer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}