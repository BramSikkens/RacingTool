{"ast":null,"code":"export class Reeks {\n  constructor(categorie, maxAantalBanen) {\n    this._categorie = void 0;\n    this._baanVerdeling = void 0;\n    this._startTijd = void 0;\n    this._maxAantalBanen = void 0;\n    this._isFull = void 0;\n    this._categorie = categorie;\n    this._maxAantalBanen = maxAantalBanen;\n    this._baanVerdeling = new Map();\n    this._isFull = false;\n  }\n\n  get categorie() {\n    return this._categorie;\n  }\n\n  get baanVerdeling() {\n    return this._baanVerdeling;\n  }\n\n  set startTijd(tijd) {\n    this._startTijd = tijd;\n  }\n\n  get startTijd() {\n    return this._startTijd;\n  }\n\n  addDeelnemer(deelnemer, baanNr) {\n    if (this._isFull) {\n      throw Error(\"Reeks is Vol\");\n    }\n\n    if (deelnemer.categorie !== this._categorie) {\n      throw Error(\"Deze deelnemer heeft niet de juiste categorie\");\n    }\n\n    if (baanNr) {\n      if (this._baanVerdeling.get(baanNr) == undefined) {\n        this._baanVerdeling.set(baanNr, deelnemer);\n      } else {\n        throw Error(\"Baan is niet vrij\");\n      }\n    } else {\n      if (this._maxAantalBanen != undefined) {\n        for (let baan = 1; baan <= this._maxAantalBanen; baan++) {\n          if (!this._baanVerdeling.has(baan)) {\n            this._baanVerdeling.set(baan, deelnemer);\n\n            break;\n          }\n        }\n\n        this._isFull = this._baanVerdeling.size == this._maxAantalBanen;\n      } else {\n        this.baanVerdeling.set(this._baanVerdeling.size + 1, deelnemer);\n      }\n    }\n\n    return this._baanVerdeling;\n  }\n\n  removeDeelnemer(id) {\n    let deelnemerToRemove;\n    this.baanVerdeling.forEach((deelnemer, key) => {\n      if (deelnemer.id == id) {\n        deelnemerToRemove = deelnemer;\n        this.baanVerdeling.delete(key);\n        return deelnemerToRemove;\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/PropagandaSysteem/src/DomainLayer/Entities/Reeks.ts"],"names":["Reeks","constructor","categorie","maxAantalBanen","_categorie","_baanVerdeling","_startTijd","_maxAantalBanen","_isFull","Map","baanVerdeling","startTijd","tijd","addDeelnemer","deelnemer","baanNr","Error","get","undefined","set","baan","has","size","removeDeelnemer","id","deelnemerToRemove","forEach","key","delete"],"mappings":"AAGA,OAAO,MAAMA,KAAN,CAAY;AAOjBC,EAAAA,WAAW,CAACC,SAAD,EAAuBC,cAAvB,EAAgD;AAAA,SANnDC,UAMmD;AAAA,SALnDC,cAKmD;AAAA,SAJ3DC,UAI2D;AAAA,SAH3DC,eAG2D;AAAA,SAF3DC,OAE2D;AACzD,SAAKJ,UAAL,GAAkBF,SAAlB;AACA,SAAKK,eAAL,GAAuBJ,cAAvB;AACA,SAAKE,cAAL,GAAsB,IAAII,GAAJ,EAAtB;AACA,SAAKD,OAAL,GAAe,KAAf;AACD;;AAEY,MAATN,SAAS,GAAc;AACzB,WAAO,KAAKE,UAAZ;AACD;;AAEgB,MAAbM,aAAa,GAA2B;AAC1C,WAAO,KAAKL,cAAZ;AACD;;AAEY,MAATM,SAAS,CAACC,IAAD,EAAa;AACxB,SAAKN,UAAL,GAAkBM,IAAlB;AACD;;AAEY,MAATD,SAAS,GAAS;AACpB,WAAO,KAAKL,UAAZ;AACD;;AAEDO,EAAAA,YAAY,CAACC,SAAD,EAAuBC,MAAvB,EAAgE;AAC1E,QAAI,KAAKP,OAAT,EAAkB;AAChB,YAAMQ,KAAK,CAAC,cAAD,CAAX;AACD;;AACD,QAAIF,SAAS,CAACZ,SAAV,KAAwB,KAAKE,UAAjC,EAA6C;AAC3C,YAAMY,KAAK,CAAC,+CAAD,CAAX;AACD;;AAED,QAAID,MAAJ,EAAY;AACV,UAAI,KAAKV,cAAL,CAAoBY,GAApB,CAAwBF,MAAxB,KAAmCG,SAAvC,EAAkD;AAChD,aAAKb,cAAL,CAAoBc,GAApB,CAAwBJ,MAAxB,EAAgCD,SAAhC;AACD,OAFD,MAEO;AACL,cAAME,KAAK,CAAC,mBAAD,CAAX;AACD;AACF,KAND,MAMO;AACL,UAAI,KAAKT,eAAL,IAAwBW,SAA5B,EAAuC;AACrC,aAAK,IAAIE,IAAI,GAAG,CAAhB,EAAmBA,IAAI,IAAI,KAAKb,eAAhC,EAAiDa,IAAI,EAArD,EAAyD;AACvD,cAAI,CAAC,KAAKf,cAAL,CAAoBgB,GAApB,CAAwBD,IAAxB,CAAL,EAAoC;AAClC,iBAAKf,cAAL,CAAoBc,GAApB,CAAwBC,IAAxB,EAA8BN,SAA9B;;AACA;AACD;AACF;;AACD,aAAKN,OAAL,GAAe,KAAKH,cAAL,CAAoBiB,IAApB,IAA4B,KAAKf,eAAhD;AACD,OARD,MAQO;AACL,aAAKG,aAAL,CAAmBS,GAAnB,CAAuB,KAAKd,cAAL,CAAoBiB,IAApB,GAA2B,CAAlD,EAAqDR,SAArD;AACD;AACF;;AACD,WAAO,KAAKT,cAAZ;AACD;;AAEDkB,EAAAA,eAAe,CAACC,EAAD,EAAkB;AAC/B,QAAIC,iBAAJ;AACA,SAAKf,aAAL,CAAmBgB,OAAnB,CAA2B,CAACZ,SAAD,EAAuBa,GAAvB,KAAuC;AAChE,UAAIb,SAAS,CAACU,EAAV,IAAgBA,EAApB,EAAwB;AACtBC,QAAAA,iBAAiB,GAAGX,SAApB;AACA,aAAKJ,aAAL,CAAmBkB,MAAnB,CAA0BD,GAA1B;AACA,eAAOF,iBAAP;AACD;AACF,KAND;AAOD;;AArEgB","sourcesContent":["import RaceEntry from \"../Abstracts/RaceEntry\";\nimport { Categorie } from \"../Enums/Categorie\";\n\nexport class Reeks {\n  private _categorie: Categorie;\n  private _baanVerdeling: Map<number, RaceEntry>;\n  _startTijd: Date;\n  _maxAantalBanen: number | undefined;\n  _isFull: boolean;\n\n  constructor(categorie: Categorie, maxAantalBanen?: number) {\n    this._categorie = categorie;\n    this._maxAantalBanen = maxAantalBanen;\n    this._baanVerdeling = new Map();\n    this._isFull = false;\n  }\n\n  get categorie(): Categorie {\n    return this._categorie;\n  }\n\n  get baanVerdeling(): Map<number, RaceEntry> {\n    return this._baanVerdeling;\n  }\n\n  set startTijd(tijd: Date) {\n    this._startTijd = tijd;\n  }\n\n  get startTijd(): Date {\n    return this._startTijd;\n  }\n\n  addDeelnemer(deelnemer: RaceEntry, baanNr?: number): Map<number, RaceEntry> {\n    if (this._isFull) {\n      throw Error(\"Reeks is Vol\");\n    }\n    if (deelnemer.categorie !== this._categorie) {\n      throw Error(\"Deze deelnemer heeft niet de juiste categorie\");\n    }\n\n    if (baanNr) {\n      if (this._baanVerdeling.get(baanNr) == undefined) {\n        this._baanVerdeling.set(baanNr, deelnemer);\n      } else {\n        throw Error(\"Baan is niet vrij\");\n      }\n    } else {\n      if (this._maxAantalBanen != undefined) {\n        for (let baan = 1; baan <= this._maxAantalBanen; baan++) {\n          if (!this._baanVerdeling.has(baan)) {\n            this._baanVerdeling.set(baan, deelnemer);\n            break;\n          }\n        }\n        this._isFull = this._baanVerdeling.size == this._maxAantalBanen;\n      } else {\n        this.baanVerdeling.set(this._baanVerdeling.size + 1, deelnemer);\n      }\n    }\n    return this._baanVerdeling;\n  }\n\n  removeDeelnemer(id: string): any {\n    let deelnemerToRemove: RaceEntry;\n    this.baanVerdeling.forEach((deelnemer: RaceEntry, key: number) => {\n      if (deelnemer.id == id) {\n        deelnemerToRemove = deelnemer;\n        this.baanVerdeling.delete(key);\n        return deelnemerToRemove;\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}