{"ast":null,"code":"var _jsxFileName = \"/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/Modals/AddInschrijving/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Dialog, DialogActions } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\nimport { SchrijfIn, VerkrijgRaceInfo } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases\";\nimport { verkrijgRondesVanRace } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/Race/RaceUseCases\";\nimport { Categorie } from \"PropagandaSysteem/src/DomainLayer/Enums/Categorie\";\nimport { howManyTeamMembers } from \"PropagandaSysteem/src/DomainLayer/utils\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddInschrijvingModal(props) {\n  _s();\n\n  const params = useParams();\n  const [boottype, setboottype] = React.useState(undefined);\n  const [open, setOpen] = React.useState(false);\n  const [schrijfInRequest, setSchrijfInRequest] = React.useState(undefined);\n  const [raceInfo, setRaceInfo] = React.useState(undefined);\n  const [rondes, setRondes] = React.useState(undefined);\n  const [rondeName, setRondeName] = React.useState([]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    SchrijfIn(schrijfInRequest, ApplicationState.getInstance());\n    handleClose();\n  };\n\n  useEffect(() => {\n    setRondes(verkrijgRondesVanRace({\n      raceTitle: params.raceTitle\n    }, ApplicationState.getInstance()).rondes);\n    setRaceInfo(VerkrijgRaceInfo(ApplicationState.getInstance(), params.raceTitle));\n  }, [params]);\n  useEffect(() => {\n    if (raceInfo) {\n      if (howManyTeamMembers(raceInfo.raceInfo.boottype) > 1) {\n        setSchrijfInRequest({\n          voornaam: \"\",\n          achternaam: \"\",\n          club: \"\",\n          categorie: Categorie.PUP_H,\n          teamWedstrijden: []\n        });\n      } else {\n        console.log(\"single\");\n      }\n    }\n\n    console.log(schrijfInRequest);\n  }, [raceInfo]);\n\n  const handleRondeChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setRondeName( // On autofill we get a stringified value.\n    typeof value === \"string\" ? value.split(\",\") : value);\n    setSchrijfInRequest({ ...schrijfInRequest,\n      individueleWedstrijden: [{\n        wedstrijd: params.raceTitle,\n        rondes: typeof value === \"string\" ? value.split(\",\") : value\n      }]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Boottype:\", boottype || \"geen boottype\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Add Inschrijving\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddInschrijvingModal, \"NVl2COh/8Q/6Jv7XnL5C+V8Epv0=\", false, function () {\n  return [useParams];\n});\n\n_c = AddInschrijvingModal;\nAddInschrijvingModal.propTypes = {\n  onAddMenu: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddInschrijvingModal\");","map":{"version":3,"sources":["/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/Modals/AddInschrijving/index.tsx"],"names":["Button","Dialog","DialogActions","PropTypes","ApplicationState","SchrijfIn","VerkrijgRaceInfo","verkrijgRondesVanRace","Categorie","howManyTeamMembers","React","useEffect","useParams","AddInschrijvingModal","props","params","boottype","setboottype","useState","undefined","open","setOpen","schrijfInRequest","setSchrijfInRequest","raceInfo","setRaceInfo","rondes","setRondes","rondeName","setRondeName","handleClickOpen","handleClose","handleSave","getInstance","raceTitle","voornaam","achternaam","club","categorie","PUP_H","teamWedstrijden","console","log","handleRondeChange","event","target","value","split","individueleWedstrijden","wedstrijd","propTypes","onAddMenu","func"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  InputLabel,\n  ListItemText,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  TextField,\n} from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\nimport { SchrijfInRequest } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieRequests\";\nimport { VerkrijgRaceInfoResponse } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieResponses\";\nimport {\n  SchrijfIn,\n  VerkrijgRaceInfo,\n} from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases\";\nimport { verkrijgRondesVanRace } from \"PropagandaSysteem/src/ApplicationLayer/Organisatie/Race/RaceUseCases\";\nimport { BootType } from \"PropagandaSysteem/src/DomainLayer/Enums/BootType\";\nimport { Categorie } from \"PropagandaSysteem/src/DomainLayer/Enums/Categorie\";\nimport { howManyTeamMembers } from \"PropagandaSysteem/src/DomainLayer/utils\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\n\nexport default function AddInschrijvingModal(props: any) {\n  const params = useParams();\n  const [boottype, setboottype] = React.useState<number | undefined>(undefined);\n\n  const [open, setOpen] = React.useState(false);\n  const [schrijfInRequest, setSchrijfInRequest] = React.useState<\n    SchrijfInRequest | undefined\n  >(undefined);\n\n  const [raceInfo, setRaceInfo] = React.useState<\n    VerkrijgRaceInfoResponse | undefined\n  >(undefined);\n\n  const [rondes, setRondes] = React.useState<Array<string> | undefined>(\n    undefined\n  );\n\n  const [rondeName, setRondeName] = React.useState<Array<string>>([]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    SchrijfIn(schrijfInRequest!, ApplicationState.getInstance());\n    handleClose();\n  };\n\n  useEffect(() => {\n    setRondes(\n      verkrijgRondesVanRace(\n        {\n          raceTitle: params.raceTitle!,\n        },\n        ApplicationState.getInstance()\n      ).rondes\n    );\n\n    setRaceInfo(\n      VerkrijgRaceInfo(ApplicationState.getInstance(), params.raceTitle!)\n    );\n  }, [params]);\n\n  useEffect(() => {\n    if (raceInfo) {\n      if (howManyTeamMembers(raceInfo!.raceInfo!.boottype as BootType) > 1) {\n        setSchrijfInRequest({\n          voornaam: \"\",\n          achternaam: \"\",\n          club: \"\",\n          categorie: Categorie.PUP_H,\n          teamWedstrijden: [],\n        });\n      } else {\n        console.log(\"single\");\n      }\n    }\n\n    console.log(schrijfInRequest);\n  }, [raceInfo]);\n\n  const handleRondeChange = (event: any) => {\n    const {\n      target: { value },\n    } = event;\n    setRondeName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n\n    setSchrijfInRequest({\n      ...(schrijfInRequest as SchrijfInRequest),\n      individueleWedstrijden: [\n        {\n          wedstrijd: params.raceTitle!,\n          rondes: typeof value === \"string\" ? value.split(\",\") : value,\n        },\n      ],\n    });\n  };\n\n  return (\n    <div>\n      <p>Boottype:{boottype || \"geen boottype\"}</p>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Add Inschrijving\n      </Button>\n      <Dialog open={open}>\n        {/* <DialogContent>\n          <DialogContentText>\n            Fill in the form to create a new inscription\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"firstName\"\n            label=\"First Name\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e) => {\n              setSchrijfInRequest({\n                ...(schrijfInRequest as SchrijfInRequest),\n                voornaam: e.target.value,\n              });\n            }}\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"secondName\"\n            label=\"Second Name\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e) => {\n              setSchrijfInRequest({\n                ...(schrijfInRequest as SchrijfInRequest),\n                achternaam: e.target.value,\n              });\n            }}\n          />\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"club\"\n            label=\"Club\"\n            type=\"text\"\n            fullWidth\n            variant=\"standard\"\n            onChange={(e) => {\n              setSchrijfInRequest({\n                ...(schrijfInRequest as SchrijfInRequest),\n                club: e.target.value,\n              });\n            }}\n          />\n          <InputLabel id=\"demo-multiple-checkbox-label\">Category</InputLabel>\n\n          <Select\n            labelId=\"Categorie\"\n            id=\"category\"\n            label=\"Category\"\n            value={schrijfInRequest!.categorie}\n            onChange={(e) => {\n              setSchrijfInRequest({\n                ...(schrijfInRequest as SchrijfInRequest),\n                categorie: e.target.value,\n              });\n            }}\n          >\n            {Object.keys(Categorie).map((categorie: string) => {\n              return (\n                <MenuItem key={categorie} value={categorie}>\n                  {categorie}\n                </MenuItem>\n              );\n            })}\n          </Select>\n\n          <InputLabel id=\"demo-multiple-checkbox-label\">Rounds</InputLabel>\n\n          <Select\n            labelId=\"demo-multiple-checkbox-label\"\n            id=\"demo-multiple-checkbox\"\n            multiple\n            value={rondeName}\n            onChange={handleRondeChange}\n            input={<OutlinedInput label=\"Tag\" />}\n            renderValue={(selected) => selected.join(\", \")}\n            // MenuProps={MenuProps}\n          >\n            {rondes?.map((ronde: string) => (\n              <MenuItem key={ronde} value={ronde}>\n                <Checkbox checked={rondeName.indexOf(ronde) > -1} />\n                <ListItemText primary={ronde} />\n              </MenuItem>\n            ))}\n          </Select>\n        </DialogContent> */}\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleSave}>Save</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nAddInschrijvingModal.propTypes = {\n  onAddMenu: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}