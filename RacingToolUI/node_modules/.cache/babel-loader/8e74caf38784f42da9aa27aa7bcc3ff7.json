{"ast":null,"code":"var _jsxFileName = \"/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/NavigationDrawer/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\nimport { Box, Drawer } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Toolbar } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  }\n}));\n\nconst generateNavigationItems = navigationObject => {\n  if (Object.keys(navigationObject).length) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: Object.keys(navigationObject).map((keyName, keyIndex) => {\n        return /*#__PURE__*/_jsxDEV(TreeItem, {\n          label: keyName,\n          nodeId: keyName,\n          children: Object.keys(navigationObject[keyName]) ? generateNavigationItems(navigationObject[keyName]) : /*#__PURE__*/_jsxDEV(TreeItem, {\n            label: keyName,\n            nodeId: keyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, keyIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false);\n  }\n};\n\nconst data = [{\n  title: \"K1_1000\",\n  index: \"1\",\n  children: [{\n    title: \"ronde1\",\n    index: \"2\"\n  }, {\n    title: \"ronde2\",\n    index: \"3\"\n  }]\n}, {\n  title: \"K2_1000\",\n  index: \"4\",\n  children: [{\n    title: \"ronde1\",\n    index: \"5\"\n  }, {\n    title: \"ronde2\",\n    index: \"6\"\n  }]\n}];\n\nconst generateMenu = items => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: items.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          children: i.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), i.children && generateMenu(i.children)]\n      }, \"1\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\nexport default function NavigationDrawer() {\n  _s();\n\n  const classes = useStyles();\n  const [navigationItems, setNavigationItems] = useState({\n    K1_1000: {\n      ronde1: {},\n      ronde2: {}\n    },\n    K2_1000: {\n      ronde1: {},\n      ronde2: {}\n    }\n  });\n  useEffect(() => {//generateNavigationItems(navigationItems);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        [`& .MuiDrawer-paper`]: {\n          width: drawerWidth,\n          boxSizing: \"border-box\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          overflow: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(TreeView, {\n          className: classes.root,\n          defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 34\n          }, this),\n          defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 32\n          }, this),\n          children: generateNavigationItems(navigationItems)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(NavigationDrawer, \"Je2ombRIuv9lqNFQGD+hcLtENfM=\", false, function () {\n  return [useStyles];\n});\n\n_c = NavigationDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationDrawer\");","map":{"version":3,"sources":["/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Components/NavigationDrawer/index.tsx"],"names":["TreeItem","TreeView","Box","Drawer","makeStyles","React","useEffect","useState","ChevronRightIcon","ExpandMoreIcon","Toolbar","drawerWidth","useStyles","theme","root","display","flexDirection","drawer","width","flexShrink","drawerPaper","generateNavigationItems","navigationObject","Object","keys","length","map","keyName","keyIndex","data","title","index","children","generateMenu","items","item","i","NavigationDrawer","classes","navigationItems","setNavigationItems","K1_1000","ronde1","ronde2","K2_1000","boxSizing","overflow"],"mappings":"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","sourcesContent":["import { TreeItem, TreeView } from \"@material-ui/lab\";\nimport { Box, Drawer } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Toolbar } from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: any) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n\nconst generateNavigationItems = (navigationObject: any) => {\n  if (Object.keys(navigationObject).length) {\n    return (\n      <>\n        {Object.keys(navigationObject).map((keyName, keyIndex) => {\n          return (\n            <TreeItem label={keyName} nodeId={keyName} key={keyIndex}>\n              {Object.keys(navigationObject[keyName]) ? (\n                generateNavigationItems(navigationObject[keyName])\n              ) : (\n                <TreeItem label={keyName} nodeId={keyName} />\n              )}\n            </TreeItem>\n          );\n        })}\n      </>\n    );\n  }\n};\n\nconst data = [\n  {\n    title: \"K1_1000\",\n    index: \"1\",\n    children: [\n      {\n        title: \"ronde1\",\n        index: \"2\",\n      },\n      {\n        title: \"ronde2\",\n        index: \"3\",\n      },\n    ],\n  },\n  {\n    title: \"K2_1000\",\n    index: \"4\",\n    children: [\n      {\n        title: \"ronde1\",\n        index: \"5\",\n      },\n      {\n        title: \"ronde2\",\n        index: \"6\",\n      },\n    ],\n  },\n];\n\nconst generateMenu = (items: any) => {\n  return (\n    <ul>\n      {items.map((item: any) => {\n        return (\n          <li key=\"1\">\n            <a>{i.title}</a>\n            {i.children && generateMenu(i.children)}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default function NavigationDrawer() {\n  const classes = useStyles();\n  const [navigationItems, setNavigationItems] = useState({\n    K1_1000: {\n      ronde1: {},\n      ronde2: {},\n    },\n    K2_1000: {\n      ronde1: {},\n      ronde2: {},\n    },\n  });\n\n  useEffect(() => {\n    //generateNavigationItems(navigationItems);\n  }, []);\n\n  return (\n    <>\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          [`& .MuiDrawer-paper`]: {\n            width: drawerWidth,\n            boxSizing: \"border-box\",\n          },\n        }}\n      >\n        <Toolbar />\n        <Box sx={{ overflow: \"auto\" }}>\n          <TreeView\n            className={classes.root}\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n          >\n            {generateNavigationItems(navigationItems)}\n          </TreeView>\n        </Box>\n      </Drawer>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}