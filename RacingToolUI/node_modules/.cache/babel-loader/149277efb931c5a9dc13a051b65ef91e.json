{"ast":null,"code":"import { Deelnemer } from \"../../DomainLayer/Entities/Deelnemer\";\nimport Organisatie from \"../../DomainLayer/Entities/Organisatie\";\nimport Team from \"../../DomainLayer/Entities/Team\";\nexport function CreerOrganisatie(CreerOrganisatieDTO, ApplicationState) {\n  let newOrganisatie = new Organisatie(CreerOrganisatieDTO.naam, CreerOrganisatieDTO.plaats, new Date(CreerOrganisatieDTO.start), new Date(CreerOrganisatieDTO.einde));\n  ApplicationState.organisatie = newOrganisatie;\n  return {\n    status: ApplicationState.organisatie ? \"succes\" : \"fail\",\n    message: ApplicationState.organisatie ? \"Organisatie Created\" : \"Creation failed\",\n    organisatie: ApplicationState.organisatie ? {\n      naam: newOrganisatie.naam,\n      plaats: newOrganisatie.plaats,\n      start: newOrganisatie.start.toISOString(),\n      einde: newOrganisatie.einde.toISOString()\n    } : undefined\n  };\n}\n_c = CreerOrganisatie;\nexport function LoadOrganisatieFromFile(request, ApplicationState, FileSaver) {\n  try {\n    const loadedOrganisatie = FileSaver.load(request.path);\n\n    if (loadedOrganisatie && request.overwrite == true) {\n      ApplicationState.organisatie = loadedOrganisatie;\n      return {\n        status: \"succes\",\n        message: \"New Organisatie Loaded\",\n        organisatie: {\n          naam: loadedOrganisatie.naam,\n          plaats: loadedOrganisatie.plaats //start: loadedOrganisatie.start.toISOString(),\n          //einde: loadedOrganisatie.einde.toISOString(),\n\n        }\n      };\n    }\n  } catch (e) {\n    console.warn(e);\n    return {\n      status: \"failed\",\n      message: e\n    };\n  }\n}\n_c2 = LoadOrganisatieFromFile;\nexport function LoadOrganisatieFromFileInWebbrowser(request, ApplicationState, FileSaver) {\n  try {\n    const loadedOrganisatie = FileSaver.load(undefined, request.filecontent);\n\n    if (loadedOrganisatie && request.overwrite == true) {\n      ApplicationState.organisatie = loadedOrganisatie;\n      return {\n        status: \"succes\",\n        message: \"New Organisatie Loaded\",\n        organisatie: {\n          naam: loadedOrganisatie.naam,\n          plaats: loadedOrganisatie.plaats //start: loadedOrganisatie.start.toISOString(),\n          //einde: loadedOrganisatie.einde.toISOString(),\n\n        }\n      };\n    }\n  } catch (e) {\n    console.warn(e);\n    return {\n      status: \"failed\",\n      message: e\n    };\n  }\n}\n_c3 = LoadOrganisatieFromFileInWebbrowser;\nexport function saveFileFromWebbrowser(applicationState, FileSaver) {\n  FileSaver.save(applicationState.organisatie);\n}\nexport function VerwijderOrganisatie() {}\n_c4 = VerwijderOrganisatie;\nexport function WijzigOrganisatie() {}\n_c5 = WijzigOrganisatie;\nexport function VerkrijgOrganisatie(ApplicationState) {\n  if (ApplicationState.organisatie != undefined) {\n    return {\n      naam: ApplicationState.organisatie.naam,\n      plaats: ApplicationState.organisatie.plaats,\n      start: ApplicationState.organisatie.start.toString(),\n      einde: ApplicationState.organisatie.einde.toString()\n    };\n  } else {\n    return undefined;\n  }\n}\n_c6 = VerkrijgOrganisatie;\nexport function SchrijfIn(request, ApplicationState) {\n  const organisatie = ApplicationState.organisatie;\n  const newDeelnemer = new Deelnemer(request.voornaam + \" \" + request.achternaam, request.club, request.categorie);\n\n  if (request.individueleWedstrijden !== undefined) {\n    request.individueleWedstrijden.forEach(wedstrijdKey => {\n      let wedstrijd = organisatie.inschrijvingen.get(wedstrijdKey.wedstrijd);\n      wedstrijd.schrijfIn([newDeelnemer], wedstrijdKey.rondes, wedstrijd._maxAantalBanen);\n    });\n  }\n\n  if (request.teamWedstrijden !== undefined && request.teamWedstrijden.length > 0) {\n    request.teamWedstrijden.forEach(teamWedstrijd => {\n      let wedstrijd = organisatie.inschrijvingen.get(teamWedstrijd.wedstrijd);\n      let teamGenoten = new Array();\n      teamWedstrijd.teamgenoten.forEach(teamGenoot => {\n        teamGenoten.push(new Deelnemer(teamGenoot.voornaam + \" \" + teamGenoot.achternaam, teamGenoot.club, teamGenoot.categorie));\n      });\n      let team = new Team(teamWedstrijd.categorie, \"1\", request.club, [newDeelnemer, ...teamGenoten]);\n      wedstrijd.schrijfIn([team], teamWedstrijd.rondes);\n    });\n  }\n\n  ApplicationState.notify(ApplicationState);\n}\n_c7 = SchrijfIn;\nexport function VerkrijgDeelnemers(applicationState) {\n  let organisatie = applicationState.organisatie;\n  let deelnemerArray = new Array();\n\n  for (let wedstrijdKey of organisatie.inschrijvingen.keys()) {\n    let deelnemers = organisatie.inschrijvingen.get(wedstrijdKey).verkrijgDeelnemers();\n    deelnemerArray.push(...deelnemers);\n  }\n\n  let noDuplicateDeelnemers = [...new Set(deelnemerArray)];\n  return noDuplicateDeelnemers;\n}\n_c8 = VerkrijgDeelnemers;\nexport function VerkrijgNavigationKeys(applicationState) {\n  let testIndex = 0;\n\n  function RecursiveNavigation(object) {\n    return Object.keys(object).map((key, index) => {\n      testIndex = testIndex + 1;\n\n      if (Object.keys(object[key]).length) {\n        return {\n          title: key,\n          index: testIndex,\n          children: RecursiveNavigation(object[key])\n        };\n      } else {\n        return {\n          title: key,\n          index: testIndex\n        };\n      }\n    });\n  }\n\n  let keys = applicationState.organisatie.verkrijgWedstrijdKeys();\n  return RecursiveNavigation(keys);\n}\n_c9 = VerkrijgNavigationKeys;\nexport function VerkrijgRaceInfo(applicationState, raceTitle) {\n  const raceToGet = applicationState.organisatie.inschrijvingen.get(raceTitle);\n\n  if (raceToGet !== undefined) {\n    return {\n      status: \"succes\",\n      message: \"Race Fetched\",\n      raceInfo: {\n        boottype: raceToGet._bootType,\n        title: \"K1 1000\",\n        afstand: raceToGet._afstand,\n        rondes: raceToGet.verkrijgRondes()\n      }\n    };\n  } else {\n    return {\n      status: \"failed\",\n      message: \"Something went wrong\"\n    };\n  }\n}\n_c10 = VerkrijgRaceInfo;\nexport function VerkrijgAlleReeksenVanOrganisatie(applicationState) {\n  const organisatie = applicationState.organisatie;\n  const reeksen = organisatie.verkrijgAlleReeksen();\n\n  if (reeksen) {\n    return {\n      status: \"success\",\n      message: \"Retrieved Reeksen\",\n      reeksen: reeksen\n    };\n  } else {\n    return {\n      status: \"success\",\n      message: \"Retrieved Reeksen\"\n    };\n  }\n}\n_c11 = VerkrijgAlleReeksenVanOrganisatie;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"CreerOrganisatie\");\n$RefreshReg$(_c2, \"LoadOrganisatieFromFile\");\n$RefreshReg$(_c3, \"LoadOrganisatieFromFileInWebbrowser\");\n$RefreshReg$(_c4, \"VerwijderOrganisatie\");\n$RefreshReg$(_c5, \"WijzigOrganisatie\");\n$RefreshReg$(_c6, \"VerkrijgOrganisatie\");\n$RefreshReg$(_c7, \"SchrijfIn\");\n$RefreshReg$(_c8, \"VerkrijgDeelnemers\");\n$RefreshReg$(_c9, \"VerkrijgNavigationKeys\");\n$RefreshReg$(_c10, \"VerkrijgRaceInfo\");\n$RefreshReg$(_c11, \"VerkrijgAlleReeksenVanOrganisatie\");","map":{"version":3,"sources":["/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/PropagandaSysteem/src/ApplicationLayer/Organisatie/OrganisatieUseCases.ts"],"names":["Deelnemer","Organisatie","Team","CreerOrganisatie","CreerOrganisatieDTO","ApplicationState","newOrganisatie","naam","plaats","Date","start","einde","organisatie","status","message","toISOString","undefined","LoadOrganisatieFromFile","request","FileSaver","loadedOrganisatie","load","path","overwrite","e","console","warn","LoadOrganisatieFromFileInWebbrowser","filecontent","saveFileFromWebbrowser","applicationState","save","VerwijderOrganisatie","WijzigOrganisatie","VerkrijgOrganisatie","toString","SchrijfIn","newDeelnemer","voornaam","achternaam","club","categorie","individueleWedstrijden","forEach","wedstrijdKey","wedstrijd","inschrijvingen","get","schrijfIn","rondes","_maxAantalBanen","teamWedstrijden","length","teamWedstrijd","teamGenoten","Array","teamgenoten","teamGenoot","push","team","notify","VerkrijgDeelnemers","deelnemerArray","keys","deelnemers","verkrijgDeelnemers","noDuplicateDeelnemers","Set","VerkrijgNavigationKeys","testIndex","RecursiveNavigation","object","Object","map","key","index","title","children","verkrijgWedstrijdKeys","VerkrijgRaceInfo","raceTitle","raceToGet","raceInfo","boottype","_bootType","afstand","_afstand","verkrijgRondes","VerkrijgAlleReeksenVanOrganisatie","reeksen","verkrijgAlleReeksen"],"mappings":"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","sourcesContent":["import { Deelnemer } from \"../../DomainLayer/Entities/Deelnemer\";\nimport Organisatie from \"../../DomainLayer/Entities/Organisatie\";\nimport Race from \"../../DomainLayer/Entities/Race\";\nimport Team from \"../../DomainLayer/Entities/Team\";\nimport { Categorie } from \"../../DomainLayer/Enums/Categorie\";\nimport ApplicationState from \"../ApplicationState\";\nimport FileSaver from \"../../lib/FileSaver\";\nimport IPersistable from \"../IPersistable\";\nimport CreerOrganisatieDTO, {\n  LoadOrganisatieFromFileDTO,\n  SchrijfInRequest,\n  verkrijgOrganisatieDTO,\n  LoadOrganisatieFromFileInWebbrowserDTO,\n} from \"./OrganisatieRequests\";\nimport {\n  CreatedOrganisatieResponse,\n  VerkrijgRaceInfoResponse,\n} from \"./OrganisatieResponses\";\nimport FileReaderWeb from \"../../lib/FileReaderWeb\";\nimport { Reeks } from \"../../DomainLayer/Entities/Reeks\";\n\nexport function CreerOrganisatie(\n  CreerOrganisatieDTO: CreerOrganisatieDTO,\n  ApplicationState: ApplicationState\n): CreatedOrganisatieResponse {\n  let newOrganisatie: Organisatie = new Organisatie(\n    CreerOrganisatieDTO.naam,\n    CreerOrganisatieDTO.plaats,\n    new Date(CreerOrganisatieDTO.start),\n    new Date(CreerOrganisatieDTO.einde)\n  );\n\n  ApplicationState.organisatie = newOrganisatie;\n  return {\n    status: ApplicationState.organisatie ? \"succes\" : \"fail\",\n    message: ApplicationState.organisatie\n      ? \"Organisatie Created\"\n      : \"Creation failed\",\n    organisatie: ApplicationState.organisatie\n      ? {\n          naam: newOrganisatie.naam,\n          plaats: newOrganisatie.plaats,\n          start: newOrganisatie.start.toISOString(),\n          einde: newOrganisatie.einde.toISOString(),\n        }\n      : undefined,\n  };\n}\n\nexport function LoadOrganisatieFromFile(\n  request: LoadOrganisatieFromFileDTO,\n  ApplicationState: ApplicationState,\n  FileSaver: IPersistable\n) {\n  try {\n    const loadedOrganisatie: Organisatie = FileSaver.load(request.path);\n\n    if (loadedOrganisatie && request.overwrite == true) {\n      ApplicationState.organisatie = loadedOrganisatie;\n\n      return {\n        status: \"succes\",\n        message: \"New Organisatie Loaded\",\n        organisatie: {\n          naam: loadedOrganisatie.naam,\n          plaats: loadedOrganisatie.plaats,\n          //start: loadedOrganisatie.start.toISOString(),\n          //einde: loadedOrganisatie.einde.toISOString(),\n        },\n      };\n    }\n  } catch (e) {\n    console.warn(e);\n    return {\n      status: \"failed\",\n      message: e,\n    };\n  }\n}\n\nexport function LoadOrganisatieFromFileInWebbrowser(\n  request: LoadOrganisatieFromFileInWebbrowserDTO,\n  ApplicationState: ApplicationState,\n  FileSaver: IPersistable\n) {\n  try {\n    const loadedOrganisatie: Organisatie = FileSaver.load(\n      undefined,\n      request.filecontent\n    );\n\n    if (loadedOrganisatie && request.overwrite == true) {\n      ApplicationState.organisatie = loadedOrganisatie;\n\n      return {\n        status: \"succes\",\n        message: \"New Organisatie Loaded\",\n        organisatie: {\n          naam: loadedOrganisatie.naam,\n          plaats: loadedOrganisatie.plaats,\n          //start: loadedOrganisatie.start.toISOString(),\n          //einde: loadedOrganisatie.einde.toISOString(),\n        },\n      };\n    }\n  } catch (e) {\n    console.warn(e);\n    return {\n      status: \"failed\",\n      message: e,\n    };\n  }\n}\n\nexport function saveFileFromWebbrowser(\n  applicationState: ApplicationState,\n  FileSaver: FileReaderWeb\n) {\n  FileSaver.save(applicationState.organisatie);\n}\n\nexport function VerwijderOrganisatie() {}\nexport function WijzigOrganisatie() {}\nexport function VerkrijgOrganisatie(\n  ApplicationState: ApplicationState\n): verkrijgOrganisatieDTO | undefined {\n  if (ApplicationState.organisatie != undefined) {\n    return {\n      naam: ApplicationState.organisatie.naam,\n      plaats: ApplicationState.organisatie.plaats,\n      start: ApplicationState.organisatie.start.toString(),\n      einde: ApplicationState.organisatie.einde.toString(),\n    };\n  } else {\n    return undefined;\n  }\n}\n\nexport function SchrijfIn(\n  request: SchrijfInRequest,\n  ApplicationState: ApplicationState\n) {\n  const organisatie: Organisatie = ApplicationState.organisatie;\n\n  const newDeelnemer: Deelnemer = new Deelnemer(\n    request.voornaam + \" \" + request.achternaam,\n    request.club,\n    request.categorie as Categorie\n  );\n\n  if (request.individueleWedstrijden !== undefined) {\n    request.individueleWedstrijden!.forEach((wedstrijdKey) => {\n      let wedstrijd: Race = organisatie.inschrijvingen.get(\n        wedstrijdKey.wedstrijd\n      )!;\n\n      wedstrijd.schrijfIn(\n        [newDeelnemer],\n        wedstrijdKey.rondes,\n        wedstrijd._maxAantalBanen\n      );\n    });\n  }\n  if (\n    request.teamWedstrijden !== undefined &&\n    request.teamWedstrijden!.length > 0\n  ) {\n    request.teamWedstrijden.forEach((teamWedstrijd) => {\n      let wedstrijd: Race = organisatie.inschrijvingen.get(\n        teamWedstrijd.wedstrijd\n      )!;\n\n      let teamGenoten: Array<Deelnemer> = new Array();\n      teamWedstrijd.teamgenoten.forEach((teamGenoot) => {\n        teamGenoten.push(\n          new Deelnemer(\n            teamGenoot.voornaam + \" \" + teamGenoot.achternaam,\n            teamGenoot.club,\n            teamGenoot.categorie as Categorie\n          )\n        );\n      });\n\n      let team: Team = new Team(\n        teamWedstrijd.categorie as Categorie,\n        \"1\",\n        request.club,\n        [newDeelnemer, ...teamGenoten]\n      );\n\n      wedstrijd.schrijfIn([team], teamWedstrijd.rondes);\n    });\n  }\n\n  ApplicationState.notify(ApplicationState);\n}\n\nexport function VerkrijgDeelnemers(applicationState: ApplicationState) {\n  let organisatie = applicationState.organisatie;\n  let deelnemerArray: Array<Deelnemer> = new Array<Deelnemer>();\n\n  for (let wedstrijdKey of organisatie.inschrijvingen.keys()) {\n    let deelnemers: Array<Deelnemer> = organisatie.inschrijvingen\n      .get(wedstrijdKey)!\n      .verkrijgDeelnemers();\n\n    deelnemerArray.push(...deelnemers);\n  }\n\n  let noDuplicateDeelnemers = [...new Set(deelnemerArray)];\n  return noDuplicateDeelnemers;\n}\n\nexport function VerkrijgNavigationKeys(applicationState: ApplicationState) {\n  let testIndex = 0;\n  function RecursiveNavigation(object: any): any {\n    return Object.keys(object).map((key, index) => {\n      testIndex = testIndex + 1;\n      if (Object.keys(object[key]).length) {\n        return {\n          title: key,\n          index: testIndex,\n          children: RecursiveNavigation(object[key]),\n        };\n      } else {\n        return {\n          title: key,\n          index: testIndex,\n        };\n      }\n    });\n  }\n\n  let keys = applicationState.organisatie.verkrijgWedstrijdKeys();\n  return RecursiveNavigation(keys);\n}\n\nexport function VerkrijgRaceInfo(\n  applicationState: ApplicationState,\n  raceTitle: string\n): VerkrijgRaceInfoResponse {\n  const raceToGet: Race =\n    applicationState.organisatie.inschrijvingen.get(raceTitle)!;\n  if (raceToGet !== undefined) {\n    return {\n      status: \"succes\",\n      message: \"Race Fetched\",\n      raceInfo: {\n        boottype: raceToGet._bootType,\n        title: \"K1 1000\",\n        afstand: raceToGet._afstand,\n        rondes: raceToGet.verkrijgRondes(),\n      },\n    };\n  } else {\n    return {\n      status: \"failed\",\n      message: \"Something went wrong\",\n    };\n  }\n}\n\nexport function VerkrijgAlleReeksenVanOrganisatie(\n  applicationState: ApplicationState\n): any {\n  const organisatie: Organisatie = applicationState.organisatie;\n  const reeksen: Array<Reeks> = organisatie.verkrijgAlleReeksen();\n  if (reeksen) {\n    return {\n      status: \"success\",\n      message: \"Retrieved Reeksen\",\n      reeksen: reeksen,\n    };\n  }else\n  {\n    return {\n      status: \"success\",\n      message: \"Retrieved Reeksen\",\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}