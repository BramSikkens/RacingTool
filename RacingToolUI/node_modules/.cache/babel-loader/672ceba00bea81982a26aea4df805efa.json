{"ast":null,"code":"var _jsxFileName = \"/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Views/MainView.tsx\",\n    _s = $RefreshSig$();\n\nimport \"@fontsource/roboto\";\nimport { Box, CssBaseline, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Button } from \"@mui/material\";\nimport React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport \"reflect-metadata\";\nimport \"../App.css\";\nimport NavigationDrawer from \"../Components/NavigationDrawer\";\nimport { saveAs } from \"file-saver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MainView() {\n  _s();\n\n  const drawerWidth = 240;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: \"flex\"\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        sx: {\n          zIndex: theme => theme.zIndex.drawer + 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            component: \"div\",\n            children: \"Clipped drawer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            sx: {\n              color: \"white\"\n            },\n            onClick: () => {\n              saveAs(\"hallo\");\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigationDrawer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MainView, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n_c = MainView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainView\");","map":{"version":3,"sources":["/Users/bramsikkens/Documents/Ontwikkeling/Propaganda/propagandareact/src/Views/MainView.tsx"],"names":["Box","CssBaseline","Toolbar","Typography","makeStyles","AppBar","Button","React","Outlet","NavigationDrawer","saveAs","MainView","drawerWidth","value","setValue","useState","handleChange","event","newValue","useStyles","theme","root","display","drawer","width","flexShrink","drawerPaper","zIndex","color"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,SAASA,GAAT,EAAcC,WAAd,EAA2BC,OAA3B,EAAoCC,UAApC,QAAsD,mBAAtD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAO,kBAAP;AAEA,OAAO,YAAP;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AAGA,SAASC,MAAT,QAAuB,YAAvB;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,WAAW,GAAG,GAApB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe,CAAf,CAA1B;;AAEA,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAaC,QAAb,KAA+B;AAClDJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAGf,UAAU,CAAEgB,KAAD,KAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KADiC;AAIvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,WADD;AAENa,MAAAA,UAAU,EAAE;AAFN,KAJ+B;AAQvCC,IAAAA,WAAW,EAAE;AACXF,MAAAA,KAAK,EAAEZ;AADI;AAR0B,GAAZ,CAAD,CAA5B;AAaA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEU,QAAAA,OAAO,EAAE;AAAX,OAAT;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAC,OADX;AAEE,QAAA,EAAE,EAAE;AAAEK,UAAAA,MAAM,EAAGP,KAAD,IAAWA,KAAK,CAACO,MAAN,CAAaJ,MAAb,GAAsB;AAA3C,SAFN;AAAA,+BAIE,QAAC,OAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,MAAM,MAA/B;AAAgC,YAAA,SAAS,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE;AAAEK,cAAAA,KAAK,EAAE;AAAT,aADN;AAEE,YAAA,OAAO,EAAE,MAAM;AACdlB,cAAAA,MAAM,CAAC,OAAD,CAAN;AACA,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAFF,eAoBE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cApBF,eAqBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD;;GAhDuBC,Q;;KAAAA,Q","sourcesContent":["import \"@fontsource/roboto\";\nimport { Box, CssBaseline, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Button } from \"@mui/material\";\nimport React from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport \"reflect-metadata\";\nimport AddRaceModal from \"src/Components/Modals/AddRaceModal\";\nimport \"../App.css\";\nimport NavigationDrawer from \"../Components/NavigationDrawer\";\nimport FileReaderWeb from \"PropagandaSysteem/src/lib/FileReaderWeb\";\nimport ApplicationState from \"PropagandaSysteem/src/ApplicationLayer/ApplicationState\";\nimport { saveAs } from \"file-saver\";\n\nexport default function MainView() {\n  const drawerWidth = 240;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: any, newValue: any) => {\n    setValue(newValue);\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n  }));\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        >\n          <Toolbar>\n            <Typography variant=\"h6\" noWrap component=\"div\">\n              Clipped drawer\n            </Typography>\n            <Button\n              sx={{ color: \"white\" }}\n              onClick={() => {\n               saveAs(\"hallo\")\n              }}\n            >\n              Save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <NavigationDrawer />\n        <Outlet />\n      </Box>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}